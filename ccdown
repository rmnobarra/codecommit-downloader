#!/usr/bin/env python3

from contextlib import nullcontext
from dialog import Dialog
import os
import json
import argparse
import re

def search(key,value,data):
    return [element for element in data if re.fullmatch(value,element[key]) != None]

parser = argparse.ArgumentParser(description='Tool for cloning codecommit repositories through cli')
parser.add_argument("-f","--filter", help="simple filter for matching repositories, will match with anything that begins with typed string (i.e matches yourfilter.*), this will take priority over -e.",default="")
parser.add_argument("-e","--regex", help="regex expression to match the repositories to be selected",default=".*")
args = parser.parse_args()

jsonstr=os.popen('aws codecommit list-repositories --output json').read()


region = os.getenv('AWS_REGION') 


datajson = json.loads(jsonstr)

if args.filter !="":
        filterData = search("repositoryName",args.filter+".*",datajson["repositories"])       
else:
        filterData = search("repositoryName",args.regex,datajson["repositories"])


if filterData != []:
        choicedata=list()

        d = Dialog(dialog="dialog")     
        for repositories in filterData: 
                choicedata.append([repositories["repositoryName"], repositories["repositoryId"]])  
        
        
        code, tag = d.menu("CodeCommit-Downloader",
                           choices=choicedata)

        if code == d.OK:  
                os.system('clear')
                os.system(f"git clone ssh://git-codecommit.{region}.amazonaws.com/v1/repos/{tag}")
        else:
                os.system('clear')
                print('CodeCommit-Downloader closed')
else:
        print("no repository match the query")